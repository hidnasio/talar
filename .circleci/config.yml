version: 2

defaults: &defaults
  working_directory: ~/talar
  docker:
    - image: circleci/elixir:1.8.0-node-browsers
      environment:
        MIX_ENV: test
        PUPPETEER_EXECUTABLE_PATH: /usr/bin/google-chrome-stable
    - image: circleci/postgres:10.1-alpine
      environment:
        PGUSER: postgres
        PGPASSWORD: postgres
        POSTGRES_DB: talar_test
jobs:
  build:
    <<: *defaults
    steps:
      - checkout

      - restore_cache:
          keys:
              - v2-deps-cache-{{ checksum "mix.lock" }}
              - v2-deps-cache
      - run: mix local.hex --force
      - run: mix local.rebar --force
      - run: mix deps.get
      - run: mix deps.compile
      - run: mix compile
      - save_cache:
          key: v2-deps-cache-{{ checksum "mix.lock" }}
          paths:
              - _build
              - deps
              - ~/.mix
      - persist_to_workspace:
          root: ~/
          paths:
            - talar
            - .mix
  test:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/
      - run:
          name: Wait for postgres to start
          command: dockerize -wait tcp://localhost:5432 -timeout 1m
      - run:
          name: Run tests
          command: mix test -- test/talar_web
  credo:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/
      - run:
          name: Run credo
          command: mix credo
  check_formatted:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/
      - run:
          name: Verify formatted
          command: mix format --check-formatted
  dialyzer:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/
      - restore-cache:
          keys:
            - v1-plt-cache-{{ checksum "mix.lock" }}
            - v1-plt-cache
      - run: mix dialyzer --plt
      - save_cache:
          key: v1-plt-cache-{{ checksum "mix.lock" }}
          paths:
            - _build
            - ~/.mix
      - run:
          name: Run dialyzer
          command: mix dialyzer
  percy:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/
      - run:
          name: Check chrome version
          command: google-chrome-stable --version
      - run:
          name: Install Chromedriver
          command: curl https://chromedriver.storage.googleapis.com/2.45/chromedriver_linux64.zip --output /tmp/chromedriver.zip && sudo unzip -o /tmp/chromedriver.zip chromedriver -d /usr/local/bin/
      - run:
          name: Start Chromedriver
          command: chromedriver
          background: true
      - run: cd assets && PUPPETEER_SKIP_CHROMIUM_DOWNLOAD=true npm install @percy/agent
      - run: cd assets && npm install && node node_modules/webpack/bin/webpack.js --mode development
      - run: assets/node_modules/@percy/agent/bin/run exec -- mix test test/visual

workflows:
  version: 2
  continuous_integration:
    jobs:
      - build
      - test:
          requires:
            - build
      - credo:
          requires:
            - build
      - dialyzer:
          requires:
            - build
      - check_formatted:
          requires:
            - build
      - percy:
          requires:
            - build
